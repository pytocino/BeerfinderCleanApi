name: Cervezas
description: |-

  APIs para gestionar cervezas
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/beers
    metadata:
      groupName: Cervezas
      groupDescription: |-

        APIs para gestionar cervezas
      subgroup: ''
      subgroupDescription: ''
      title: 'Listar cervezas'
      description: 'Obtiene una lista paginada de cervezas con opciones de filtrado y ordenamiento.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      name:
        name: name
        description: 'Filtrar por nombre.'
        required: false
        example: IPA
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      brewery_id:
        name: brewery_id
        description: 'Filtrar por ID de cervecería.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      style_id:
        name: style_id
        description: 'Filtrar por ID de estilo.'
        required: false
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      min_abv:
        name: min_abv
        description: 'Filtrar por ABV mínimo.'
        required: false
        example: 5.0
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      max_abv:
        name: max_abv
        description: 'Filtrar por ABV máximo.'
        required: false
        example: 8.0
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      min_ibu:
        name: min_ibu
        description: 'Filtrar por IBU mínimo.'
        required: false
        example: 20
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      max_ibu:
        name: max_ibu
        description: 'Filtrar por IBU máximo.'
        required: false
        example: 80
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      min_rating:
        name: min_rating
        description: 'Filtrar por calificación mínima (1-5).'
        required: false
        example: 4.0
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Ordenar por: name, abv, ibu, rating.'
        required: false
        example: rating
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      order:
        name: order
        description: 'Dirección: asc, desc.'
        required: false
        example: desc
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Elementos por página (5-50).'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      name: IPA
      brewery_id: 1
      style_id: 3
      min_abv: 5.0
      max_abv: 8.0
      min_ibu: 20
      max_ibu: 80
      min_rating: 4.0
      sort: rating
      order: desc
      per_page: 15
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 100 characters.'
        required: false
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      brewery_id:
        name: brewery_id
        description: 'The <code>id</code> of an existing record in the breweries table.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      style_id:
        name: style_id
        description: 'The <code>id</code> of an existing record in the beer_styles table.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      min_abv:
        name: min_abv
        description: 'Must be at least 0. Must not be greater than 100.'
        required: false
        example: 22
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      max_abv:
        name: max_abv
        description: 'Must be at least 0. Must not be greater than 100.'
        required: false
        example: 7
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      min_ibu:
        name: min_ibu
        description: 'Must be at least 0. Must not be greater than 200.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      max_ibu:
        name: max_ibu
        description: 'Must be at least 0. Must not be greater than 200.'
        required: false
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      min_rating:
        name: min_rating
        description: 'Must be at least 1. Must not be greater than 5.'
        required: false
        example: 5
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: created_at
        type: string
        enumValues:
          - name
          - abv
          - ibu
          - rating
          - created_at
        exampleWasSpecified: false
        nullable: true
        custom: []
      order:
        name: order
        description: ''
        required: false
        example: asc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: true
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 5. Must not be greater than 50.'
        required: false
        example: 8
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: b
      brewery_id: 16
      style_id: 16
      min_abv: 22
      max_abv: 7
      min_ibu: 16
      max_ibu: 17
      min_rating: 5
      sort: created_at
      order: asc
      per_page: 8
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "data": [
             {
               "id": 1,
               "name": "Mahou Clásica",
               "brewery": {
                 "id": 1,
                 "name": "Cervecería Mahou",
                 "country": "España",
                 "logo_url": "https://example.com/logos/mahou.png"
               },
               "style": {
                 "id": 2,
                 "name": "Lager"
               },
               "abv": 4.8,
               "ibu": 20,
               "description": "Cerveza rubia tipo Lager",
               "image_url": "https://example.com/beers/mahou.png",
               "rating_avg": 3.75,
               "check_ins_count": 42,
               "is_favorite": false,
               "created_at": "2023-04-18T00:00:00.000000Z",
               "updated_at": "2023-04-18T00:00:00.000000Z"
             }
           ],
           "links": {
             "first": "http://127.0.0.1:8000/api/v1/beers?page=1",
             "last": "http://127.0.0.1:8000/api/v1/beers?page=5",
             "prev": null,
             "next": "http://127.0.0.1:8000/api/v1/beers?page=2"
           },
           "meta": {
             "current_page": 1,
             "from": 1,
             "last_page": 5,
             "path": "http://127.0.0.1:8000/api/v1/beers",
             "per_page": 10,
             "to": 10,
             "total": 50
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/beers/{id}'
    metadata:
      groupName: Cervezas
      groupDescription: |-

        APIs para gestionar cervezas
      subgroup: ''
      subgroupDescription: ''
      title: 'Ver cerveza'
      description: 'Muestra información detallada de una cerveza específica.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'ID de la cerveza.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "data": {
             "id": 1,
             "name": "Mahou Clásica",
             "brewery": {
               "id": 1,
               "name": "Cervecería Mahou",
               "country": "España",
               "logo_url": "https://example.com/logos/mahou.png"
             },
             "style": {
               "id": 2,
               "name": "Lager"
             },
             "abv": 4.8,
             "ibu": 20,
             "description": "Cerveza rubia tipo Lager",
             "image_url": "https://example.com/beers/mahou.png",
             "rating_avg": 3.75,
             "check_ins_count": 42,
             "is_favorite": false
           }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "message": "No se ha encontrado la cerveza solicitada."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/beers
    metadata:
      groupName: Cervezas
      groupDescription: |-

        APIs para gestionar cervezas
      subgroup: ''
      subgroupDescription: ''
      title: 'Crear cerveza'
      description: 'Crea una nueva cerveza en el sistema.'
      authenticated: true
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Nombre de la cerveza.'
        required: true
        example: 'Estrella Galicia Especial'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      brewery_id:
        name: brewery_id
        description: 'ID de la cervecería.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      style_id:
        name: style_id
        description: 'ID del estilo.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      abv:
        name: abv
        description: 'ABV (Alcohol By Volume) en %.'
        required: false
        example: '5.5'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      ibu:
        name: ibu
        description: 'IBU (International Bitterness Units).'
        required: false
        example: 25
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'Descripción de la cerveza.'
        required: false
        example: 'Cerveza premium con carácter atlántico'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      image_url:
        name: image_url
        description: 'URL de la imagen de la cerveza.'
        required: false
        example: 'https://example.com/beers/estrella.png'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      image:
        name: image
        description: 'Imagen de la cerveza (JPG, PNG, WebP, máx 2MB).'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Estrella Galicia Especial'
      brewery_id: 2
      style_id: 2
      abv: '5.5'
      ibu: 25
      description: 'Cerveza premium con carácter atlántico'
      image_url: 'https://example.com/beers/estrella.png'
    fileParameters:
      image: null
    responses:
      -
        status: 201
        content: |-
          {
           "data": {
             "id": 51,
             "name": "Estrella Galicia Especial",
             "brewery": {
               "id": 2,
               "name": "Estrella Galicia"
             },
             "style": {
               "id": 2,
               "name": "Lager"
             },
             "abv": 5.5,
             "ibu": 25,
             "description": "Cerveza premium con carácter atlántico",
             "image_url": "https://example.com/beers/estrella.png"
           }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
           "message": "Los datos proporcionados no son válidos.",
           "errors": {
             "name": ["El campo nombre es obligatorio."],
             "brewery_id": ["La cervecería seleccionada no existe."]
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/beers/{id}'
    metadata:
      groupName: Cervezas
      groupDescription: |-

        APIs para gestionar cervezas
      subgroup: ''
      subgroupDescription: ''
      title: 'Actualizar cerveza'
      description: 'Actualiza la información de una cerveza existente.'
      authenticated: true
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'ID de la cerveza.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Nombre de la cerveza.'
        required: false
        example: 'Mahou Clásica Edición Especial'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      brewery_id:
        name: brewery_id
        description: 'ID de la cervecería.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      style_id:
        name: style_id
        description: 'ID del estilo.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      abv:
        name: abv
        description: 'ABV (Alcohol By Volume) en %.'
        required: false
        example: '4.9'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      ibu:
        name: ibu
        description: 'IBU (International Bitterness Units).'
        required: false
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'Descripción de la cerveza.'
        required: false
        example: 'Versión mejorada de la clásica Mahou'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      image_url:
        name: image_url
        description: 'URL de la imagen de la cerveza.'
        required: false
        example: 'http://www.bailey.biz/quos-velit-et-fugiat-sunt-nihil-accusantium-harum.html'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      image:
        name: image
        description: 'Imagen de la cerveza (JPG, PNG, WebP, máx 2MB).'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Mahou Clásica Edición Especial'
      brewery_id: 1
      style_id: 2
      abv: '4.9'
      ibu: 22
      description: 'Versión mejorada de la clásica Mahou'
      image_url: 'http://www.bailey.biz/quos-velit-et-fugiat-sunt-nihil-accusantium-harum.html'
    fileParameters:
      image: null
    responses:
      -
        status: 200
        content: |-
          {
           "data": {
             "id": 1,
             "name": "Mahou Clásica Edición Especial",
             "brewery": {
               "id": 1,
               "name": "Cervecería Mahou"
             },
             "style": {
               "id": 2,
               "name": "Lager"
             },
             "abv": 4.9,
             "ibu": 22,
             "description": "Versión mejorada de la clásica Mahou",
             "image_url": "https://example.com/beers/mahou_especial.png"
           }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "message": "No se ha encontrado la cerveza solicitada."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
           "message": "Los datos proporcionados no son válidos.",
           "errors": {
             "name": ["El nombre no puede superar los 255 caracteres."]
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/beers/{id}'
    metadata:
      groupName: Cervezas
      groupDescription: |-

        APIs para gestionar cervezas
      subgroup: ''
      subgroupDescription: ''
      title: 'Eliminar cerveza'
      description: 'Elimina una cerveza del sistema.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'ID de la cerveza.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "message": "No se ha encontrado la cerveza solicitada."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/beers/{id}/favorite'
    metadata:
      groupName: Cervezas
      groupDescription: |-

        APIs para gestionar cervezas
      subgroup: ''
      subgroupDescription: ''
      title: 'Marcar como favorita'
      description: 'Marca una cerveza como favorita para el usuario autenticado.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'ID de la cerveza.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Cerveza añadida a favoritos"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "message": "No se ha encontrado la cerveza solicitada."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/beers/{id}/unfavorite'
    metadata:
      groupName: Cervezas
      groupDescription: |-

        APIs para gestionar cervezas
      subgroup: ''
      subgroupDescription: ''
      title: 'Quitar de favoritos'
      description: 'Elimina una cerveza de la lista de favoritos del usuario autenticado.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'ID de la cerveza.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Cerveza eliminada de favoritos"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/beers/{id}/similar'
    metadata:
      groupName: Cervezas
      groupDescription: |-

        APIs para gestionar cervezas
      subgroup: ''
      subgroupDescription: ''
      title: 'Cervezas similares'
      description: 'Obtiene una lista de cervezas similares a la cerveza especificada basada en estilo, IBU y ABV.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'ID de la cerveza.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters:
      limit:
        name: limit
        description: 'Número máximo de cervezas a retornar (1-20).'
        required: false
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      limit: 5
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "data": [
             {
               "id": 3,
               "name": "Estrella Damm",
               "brewery": {
                 "id": 3,
                 "name": "Damm"
               },
               "style": {
                 "id": 2,
                 "name": "Lager"
               },
               "abv": 4.6,
               "ibu": 22,
               "description": "Cerveza mediterránea",
               "image_url": "https://example.com/beers/estrella_damm.png",
               "rating_avg": 3.6,
               "check_ins_count": 38,
               "is_favorite": false,
               "similarity_score": 0.92
             }
           ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "message": "No se ha encontrado la cerveza solicitada."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
