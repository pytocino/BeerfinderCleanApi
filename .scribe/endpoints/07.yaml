name: "Feed de Actividad"
description: |-

  APIs para obtener diferentes feeds de actividad en la plataforma
endpoints:
  - httpMethods:
      - GET
    uri: api/v1/feed
    metadata:
      groupName: "Feed de Actividad"
      groupDescription: |-

        APIs para obtener diferentes feeds de actividad en la plataforma
      subgroup: ""
      subgroupDescription: ""
      title: "Feed principal"
      description: "Obtiene un feed general de actividad reciente en la plataforma."
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      type:
        name: type
        description: "Filtrar por tipo de check-in (beer, brewery, style)."
        required: false
        example: beer
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      time_range:
        name: time_range
        description: "Rango de tiempo (today, week, month, all)."
        required: false
        example: week
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      min_rating:
        name: min_rating
        description: "Calificación mínima para filtrar (0-5)."
        required: false
        example: 3.5
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      location_id:
        name: location_id
        description: "ID de la ubicación para filtrar."
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sort:
        name: sort
        description: "Ordenar por: recent, popular."
        required: false
        example: popular
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: "Elementos por página (5-50)."
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      type: beer
      time_range: week
      min_rating: 3.5
      location_id: 1
      sort: popular
      per_page: 15
    bodyParameters:
      type:
        name: type
        description: ""
        required: false
        example: beer
        type: string
        enumValues:
          - beer
          - brewery
          - style
        exampleWasSpecified: false
        nullable: true
        custom: []
      time_range:
        name: time_range
        description: ""
        required: false
        example: month
        type: string
        enumValues:
          - today
          - week
          - month
          - all
        exampleWasSpecified: false
        nullable: true
        custom: []
      min_rating:
        name: min_rating
        description: "Must be at least 0. Must not be greater than 5."
        required: false
        example: 1
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      location_id:
        name: location_id
        description: "The <code>id</code> of an existing record in the locations table."
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      sort:
        name: sort
        description: ""
        required: false
        example: popular
        type: string
        enumValues:
          - recent
          - popular
        exampleWasSpecified: false
        nullable: true
        custom: []
      per_page:
        name: per_page
        description: "Must be at least 5. Must not be greater than 50."
        required: false
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      type: beer
      time_range: month
      min_rating: 1
      location_id: 16
      sort: popular
      per_page: 22
    fileParameters: []
    responses:
      - status: 200
        content: |-
          {
           "data": [
             {
               "id": 42,
               "user": {
                 "id": 3,
                 "name": "Carlos Ruiz",
                 "profile_picture": "https://example.com/avatars/carlos.jpg"
               },
               "beer": {
                 "id": 5,
                 "name": "Founders Breakfast Stout",
                 "brewery": {
                   "id": 3,
                   "name": "Founders Brewing Co."
                 }
               },
               "rating": 4.5,
               "comment": "Excelente balance entre café y chocolate",
               "photo_url": "https://example.com/photos/check_in_42.jpg",
               "location": {
                 "id": 2,
                 "name": "Beer Garden Madrid"
               },
               "likes_count": 15,
               "comments_count": 3,
               "is_liked": false,
               "created_at": "2023-04-18T18:30:00.000000Z"
             }
           ],
           "links": {...},
           "meta": {...}
          }
        headers: []
        description: ""
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  - httpMethods:
      - GET
    uri: api/v1/feed/friends
    metadata:
      groupName: "Feed de Actividad"
      groupDescription: |-

        APIs para obtener diferentes feeds de actividad en la plataforma
      subgroup: ""
      subgroupDescription: ""
      title: "Feed de amigos"
      description: "Obtiene un feed de actividad de los usuarios que sigues."
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      type:
        name: type
        description: "Filtrar por tipo de check-in (beer, brewery, style)."
        required: false
        example: beer
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      time_range:
        name: time_range
        description: "Rango de tiempo (today, week, month, all)."
        required: false
        example: week
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      min_rating:
        name: min_rating
        description: "Calificación mínima para filtrar (0-5)."
        required: false
        example: 3.5
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sort:
        name: sort
        description: "Ordenar por: recent, popular."
        required: false
        example: recent
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: "Elementos por página (5-50)."
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      type: beer
      time_range: week
      min_rating: 3.5
      sort: recent
      per_page: 15
    bodyParameters:
      type:
        name: type
        description: ""
        required: false
        example: style
        type: string
        enumValues:
          - beer
          - brewery
          - style
        exampleWasSpecified: false
        nullable: true
        custom: []
      time_range:
        name: time_range
        description: ""
        required: false
        example: week
        type: string
        enumValues:
          - today
          - week
          - month
          - all
        exampleWasSpecified: false
        nullable: true
        custom: []
      min_rating:
        name: min_rating
        description: "Must be at least 0. Must not be greater than 5."
        required: false
        example: 1
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      sort:
        name: sort
        description: ""
        required: false
        example: recent
        type: string
        enumValues:
          - recent
          - popular
        exampleWasSpecified: false
        nullable: true
        custom: []
      per_page:
        name: per_page
        description: "Must be at least 5. Must not be greater than 50."
        required: false
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      type: style
      time_range: week
      min_rating: 1
      sort: recent
      per_page: 22
    fileParameters: []
    responses:
      - status: 200
        content: |-
          {
           "data": [
             {
               "id": 56,
               "user": {
                 "id": 7,
                 "name": "María López",
                 "profile_picture": "https://example.com/avatars/maria.jpg"
               },
               "beer": {
                 "id": 12,
                 "name": "La Cibeles Rubia",
                 "brewery": {
                   "id": 8,
                   "name": "Cervezas La Cibeles"
                 }
               },
               "rating": 4.0,
               "comment": "Muy refrescante. Ideal para el verano.",
               "photo_url": null,
               "location": {
                 "id": 5,
                 "name": "Cervecería Internacional"
               },
               "likes_count": 8,
               "comments_count": 2,
               "is_liked": true,
               "created_at": "2023-04-17T14:20:00.000000Z"
             }
           ],
           "links": {...},
           "meta": {...}
          }
        headers: []
        description: ""
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  - httpMethods:
      - GET
    uri: api/v1/feed/popular
    metadata:
      groupName: "Feed de Actividad"
      groupDescription: |-

        APIs para obtener diferentes feeds de actividad en la plataforma
      subgroup: ""
      subgroupDescription: ""
      title: "Feed popular"
      description: "Obtiene un feed de los check-ins más populares en la plataforma."
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      type:
        name: type
        description: "Filtrar por tipo de check-in (beer, brewery, style)."
        required: false
        example: beer
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      time_range:
        name: time_range
        description: "Rango de tiempo (today, week, month, all)."
        required: false
        example: week
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      min_rating:
        name: min_rating
        description: "Calificación mínima para filtrar (0-5)."
        required: false
        example: 4.0
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: "Elementos por página (5-50)."
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      type: beer
      time_range: week
      min_rating: 4.0
      per_page: 15
    bodyParameters:
      type:
        name: type
        description: ""
        required: false
        example: brewery
        type: string
        enumValues:
          - beer
          - brewery
          - style
        exampleWasSpecified: false
        nullable: true
        custom: []
      time_range:
        name: time_range
        description: ""
        required: false
        example: month
        type: string
        enumValues:
          - today
          - week
          - month
          - all
        exampleWasSpecified: false
        nullable: true
        custom: []
      min_rating:
        name: min_rating
        description: "Must be at least 0. Must not be greater than 5."
        required: false
        example: 1
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      per_page:
        name: per_page
        description: "Must be at least 5. Must not be greater than 50."
        required: false
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      type: brewery
      time_range: month
      min_rating: 1
      per_page: 22
    fileParameters: []
    responses:
      - status: 200
        content: |-
          {
           "data": [
             {
               "id": 78,
               "user": {
                 "id": 4,
                 "name": "Ana Martínez",
                 "profile_picture": "https://example.com/avatars/ana.jpg"
               },
               "beer": {
                 "id": 22,
                 "name": "Westvleteren 12",
                 "brewery": {
                   "id": 15,
                   "name": "Brouwerij Westvleteren"
                 }
               },
               "rating": 5.0,
               "comment": "La mejor cerveza trapista. Una experiencia única.",
               "photo_url": "https://example.com/photos/check_in_78.jpg",
               "location": null,
               "likes_count": 45,
               "comments_count": 12,
               "is_liked": false,
               "created_at": "2023-04-12T20:15:00.000000Z"
             }
           ],
           "links": {...},
           "meta": {...}
          }
        headers: []
        description: ""
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
